import type { Color, Oklab, OklabSort, QuantizedColor } from '../types';
interface Box {
    count: number;
    score: number;
    weight: number;
    avg: Oklab;
    start: number;
    end: number;
    sort: OklabSort;
    sorted: OklabSort | null;
}
export declare class MedianCut implements ReadableWritablePair<Array<QuantizedColor>, Array<Color>> {
    maxColors: number;
    static createSorter(sort: OklabSort): (a: Color, b: Color) => number;
    protected _rsControler: ReadableStreamDefaultController<Array<QuantizedColor>>;
    constructor(maxColors: number);
    readable: ReadableStream<QuantizedColor[]>;
    writable: WritableStream<Color[]>;
    protected _colorsToBoxes(colors: Array<Color>): Array<Box>;
    protected _boxesToQuantizedColors(boxes: Array<Box>): Array<QuantizedColor>;
}
export {};
